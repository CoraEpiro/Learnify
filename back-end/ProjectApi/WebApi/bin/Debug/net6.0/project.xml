<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WebApi</name>
    </assembly>
    <members>
        <member name="M:WebApi.Controllers.TagController.GetAllCategoryBuildProfile">
            <summary>
            Retrieves all available category build profiles.
            </summary>
            <returns>A list of category build profiles.</returns>
        </member>
        <member name="M:WebApi.Controllers.TagController.GetAllCategory">
            <summary>
            Retrieves all available categories.
            </summary>
            <returns>A list of categories.</returns>
        </member>
        <member name="M:WebApi.Controllers.TagController.GetCategoryById(Application.Tasks.Queries.CategoryQueries.GetCategoryById.GetCategoryByIdQuery)">
            <summary>
            Retrieves a category using its unique identifier.
            </summary>
            <param name="query">Query containing the category identifier.</param>
            <returns>The requested category, or a "Not Found" response if not found.</returns>
        </member>
        <member name="M:WebApi.Controllers.TagController.InsertCategory(Application.Tasks.Commands.Insert.InsertCategory.InsertCategoryCommand)">
            <summary>
            Inserts a new category.
            </summary>
            <param name="command">The command containing category information.</param>
            <returns>A success response with the inserted category ID.</returns>
        </member>
        <member name="M:WebApi.Controllers.TagController.UpdateCategory(Application.Tasks.Commands.Update.UpdateCategory.UpdateCategoryCommand)">
            <summary>
            Updates an existing category.
            </summary>
            <param name="command">The command for updating category information.</param>
            <returns>A response indicating success or a "Not Found" response if the category doesn't exist.</returns>
        </member>
        <member name="M:WebApi.Controllers.TagController.DeleteCategory(Application.Tasks.Commands.Delete.DeleteCategory.DeleteCategoryCommand)">
            <summary>
            Deletes a category using its identifier.
            </summary>
            <param name="command">The command containing the category identifier.</param>
            <returns>A response indicating deletion success or a "Not Found" response if the category doesn't exist.</returns>
        </member>
        <member name="M:WebApi.Controllers.TagController.IncrementCategoryUseCount(Application.Tasks.Commands.Update.UpdateCategory.IncrementCategoryUseCountCommand)">
            <summary>
            Increments the usage count of a category list.
            </summary>
            <param name="command">The command for incrementing the usage count.</param>
            <returns>A response indicating the success of the increment operation or a failure response.</returns>
        </member>
        <member name="M:WebApi.Controllers.TagController.DecrementCategoryListUseCount(Application.Tasks.Commands.Update.UpdateCategory.DecrementCategoryListUseCountCommand)">
            <summary>
            Decrements the usage count of a category list.
            </summary>
            <param name="command">The command for decrementing the usage count.</param>
            <returns>A response indicating the success of the decrement operation or a failure response.</returns>
        </member>
        <member name="T:WebApi.Controllers.UsersController">
            <summary>
            Controller for managing user-related operations.
            </summary>
        </member>
        <member name="M:WebApi.Controllers.UsersController.#ctor(MediatR.IMediator)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApi.Controllers.UsersController"/> class.
            </summary>
            <param name="mediator">The mediator used for handling commands and queries.</param>
        </member>
        <member name="M:WebApi.Controllers.UsersController.UpdateUsername(Application.Tasks.Commands.Update.UpdateUser.UpdateUsername.UpdateUsernameCommand)">
            <summary>
            Updates the username of a user.
            </summary>
            <param name="updateCommand">The command containing update information.</param>
            <returns>The updated user's DTO if successful, NotFound if user not found.</returns>
        </member>
        <member name="M:WebApi.Controllers.UsersController.UpdatePassword(Application.Tasks.Commands.Update.UpdateUser.UpdatePassword.UpdatePasswordCommand)">
            <summary>
            Updates the password of a user.
            </summary>
            <param name="updateCommand">The command containing update information.</param>
            <returns>The updated user's DTO if successful, NotFound if user not found.</returns>
        </member>
        <member name="M:WebApi.Controllers.UsersController.BuildUser(Application.Tasks.Commands.Insert.UserInserts.BuildUser.BuildUserCommand)">
            <summary>
            Builds a new user.
            </summary>
            <param name="buildCommand">The command containing user information.</param>
            <returns>The created user's DTO if successful, NotFound if user creation fails.</returns>
        </member>
        <member name="M:WebApi.Controllers.UsersController.DeleteUser(Application.Tasks.Commands.Delete.DeleteUser.DeleteUserCommand)">
            <summary>
            Deletes a user.
            </summary>
            <param name="deleteCommand">The command containing user deletion information.</param>
            <returns>Ok if deletion is successful.</returns>
        </member>
        <member name="M:WebApi.Controllers.UsersController.GetUserById(Application.Tasks.Queries.UserQueries.GetUserById.GetUserByIdQuery)">
            <summary>
            Retrieves a user by their ID.
            </summary>
            <param name="getCommand">The query containing user ID.</param>
            <returns>The retrieved user's DTO if found, NotFound if user not found.</returns>
        </member>
        <member name="M:WebApi.Controllers.UsersController.GetUserByEmail(Application.Tasks.Queries.UserQueries.GetUserByEmail.GetUserByEmailQuery)">
            <summary>
            Retrieves a user by their email address.
            </summary>
            <param name="getCommand">The query containing email address.</param>
            <returns>The retrieved user's DTO if found, NotFound if user not found.</returns>
        </member>
        <member name="M:WebApi.Controllers.UsersController.GetUserByUsername(Application.Tasks.Queries.UserQueries.GetUserByUsername.GetUserByUsernameQuery)">
            <summary>
            Retrieves a user by their username.
            </summary>
            <param name="getCommand">The query containing username.</param>
            <returns>The retrieved user's DTO if found, NotFound if user not found.</returns>
        </member>
        <member name="M:WebApi.Controllers.UsersController.GetUserByUsersecret(Application.Tasks.Queries.UserQueries.GetUserByUsersecret.GetUserByUsersecretQuery)">
            <summary>
            Retrieves a user by their secret.
            </summary>
            <param name="getCommand">The query containing user secret.</param>
            <returns>The retrieved user's DTO if found, NotFound if user not found.</returns>
        </member>
    </members>
</doc>
